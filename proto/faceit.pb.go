// gRPC for the faceit api

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: faceit.proto

package faceit

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Profile
type ProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *ProfileRequest) Reset() {
	*x = ProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRequest) ProtoMessage() {}

func (x *ProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRequest.ProtoReflect.Descriptor instead.
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type ProfileNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProfileNameRequest) Reset() {
	*x = ProfileNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileNameRequest) ProtoMessage() {}

func (x *ProfileNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileNameRequest.ProtoReflect.Descriptor instead.
func (*ProfileNameRequest) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{1}
}

func (x *ProfileNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid     string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Skilllvl int32  `protobuf:"varint,2,opt,name=skilllvl,proto3" json:"skilllvl,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ProfileReply) Reset() {
	*x = ProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReply) ProtoMessage() {}

func (x *ProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReply.ProtoReflect.Descriptor instead.
func (*ProfileReply) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileReply) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *ProfileReply) GetSkilllvl() int32 {
	if x != nil {
		return x.Skilllvl
	}
	return 0
}

func (x *ProfileReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Invite
type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hubid string `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{3}
}

func (x *InviteRequest) GetHubid() string {
	if x != nil {
		return x.Hubid
	}
	return ""
}

type InviteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *InviteReply) Reset() {
	*x = InviteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteReply) ProtoMessage() {}

func (x *InviteReply) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteReply.ProtoReflect.Descriptor instead.
func (*InviteReply) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{4}
}

func (x *InviteReply) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *InviteReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Ban
type BanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hubid  string `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
	Guid   string `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BanRequest) Reset() {
	*x = BanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRequest) ProtoMessage() {}

func (x *BanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRequest.ProtoReflect.Descriptor instead.
func (*BanRequest) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{5}
}

func (x *BanRequest) GetHubid() string {
	if x != nil {
		return x.Hubid
	}
	return ""
}

func (x *BanRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *BanRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UnbanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hubid string `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
	Guid  string `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *UnbanRequest) Reset() {
	*x = UnbanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanRequest) ProtoMessage() {}

func (x *UnbanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanRequest.ProtoReflect.Descriptor instead.
func (*UnbanRequest) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{6}
}

func (x *UnbanRequest) GetHubid() string {
	if x != nil {
		return x.Hubid
	}
	return ""
}

func (x *UnbanRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type Hub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hubid  string `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gameid string `protobuf:"bytes,3,opt,name=gameid,proto3" json:"gameid,omitempty"`
}

func (x *Hub) Reset() {
	*x = Hub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hub) ProtoMessage() {}

func (x *Hub) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hub.ProtoReflect.Descriptor instead.
func (*Hub) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{7}
}

func (x *Hub) GetHubid() string {
	if x != nil {
		return x.Hubid
	}
	return ""
}

func (x *Hub) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hub) GetGameid() string {
	if x != nil {
		return x.Gameid
	}
	return ""
}

// Helper
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_faceit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_faceit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_faceit_proto_rawDescGZIP(), []int{8}
}

var File_faceit_proto protoreflect.FileDescriptor

var file_faceit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x6c, 0x76, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x6c, 0x76, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0b, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x4e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68,
	0x75, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x38, 0x0a, 0x0c, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x03, 0x48, 0x75,
	0x62, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x68, 0x75, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x69, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xe1, 0x02, 0x0a,
	0x06, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x66, 0x61, 0x63, 0x65,
	0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e,
	0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65,
	0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x03,
	0x42, 0x61, 0x6e, 0x12, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x55, 0x6e, 0x62, 0x61,
	0x6e, 0x12, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x75, 0x62, 0x73, 0x12, 0x16, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0b, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x2e, 0x48, 0x75, 0x62, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x66, 0x61, 0x63, 0x65, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_faceit_proto_rawDescOnce sync.Once
	file_faceit_proto_rawDescData = file_faceit_proto_rawDesc
)

func file_faceit_proto_rawDescGZIP() []byte {
	file_faceit_proto_rawDescOnce.Do(func() {
		file_faceit_proto_rawDescData = protoimpl.X.CompressGZIP(file_faceit_proto_rawDescData)
	})
	return file_faceit_proto_rawDescData
}

var file_faceit_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_faceit_proto_goTypes = []interface{}{
	(*ProfileRequest)(nil),     // 0: faceit.ProfileRequest
	(*ProfileNameRequest)(nil), // 1: faceit.ProfileNameRequest
	(*ProfileReply)(nil),       // 2: faceit.ProfileReply
	(*InviteRequest)(nil),      // 3: faceit.InviteRequest
	(*InviteReply)(nil),        // 4: faceit.InviteReply
	(*BanRequest)(nil),         // 5: faceit.BanRequest
	(*UnbanRequest)(nil),       // 6: faceit.UnbanRequest
	(*Hub)(nil),                // 7: faceit.Hub
	(*Empty)(nil),              // 8: faceit.Empty
}
var file_faceit_proto_depIdxs = []int32{
	0, // 0: faceit.Faceit.GetProfileByID:input_type -> faceit.ProfileRequest
	1, // 1: faceit.Faceit.GetProfileByName:input_type -> faceit.ProfileNameRequest
	3, // 2: faceit.Faceit.GetInvite:input_type -> faceit.InviteRequest
	5, // 3: faceit.Faceit.Ban:input_type -> faceit.BanRequest
	6, // 4: faceit.Faceit.Unban:input_type -> faceit.UnbanRequest
	0, // 5: faceit.Faceit.GetUserHubs:input_type -> faceit.ProfileRequest
	2, // 6: faceit.Faceit.GetProfileByID:output_type -> faceit.ProfileReply
	2, // 7: faceit.Faceit.GetProfileByName:output_type -> faceit.ProfileReply
	4, // 8: faceit.Faceit.GetInvite:output_type -> faceit.InviteReply
	8, // 9: faceit.Faceit.Ban:output_type -> faceit.Empty
	8, // 10: faceit.Faceit.Unban:output_type -> faceit.Empty
	7, // 11: faceit.Faceit.GetUserHubs:output_type -> faceit.Hub
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_faceit_proto_init() }
func file_faceit_proto_init() {
	if File_faceit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_faceit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_faceit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_faceit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_faceit_proto_goTypes,
		DependencyIndexes: file_faceit_proto_depIdxs,
		MessageInfos:      file_faceit_proto_msgTypes,
	}.Build()
	File_faceit_proto = out.File
	file_faceit_proto_rawDesc = nil
	file_faceit_proto_goTypes = nil
	file_faceit_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FaceitClient is the client API for Faceit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaceitClient interface {
	GetProfileByID(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileReply, error)
	GetProfileByName(ctx context.Context, in *ProfileNameRequest, opts ...grpc.CallOption) (*ProfileReply, error)
	GetInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*InviteReply, error)
	Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error)
	Unban(ctx context.Context, in *UnbanRequest, opts ...grpc.CallOption) (*Empty, error)
	GetUserHubs(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (Faceit_GetUserHubsClient, error)
}

type faceitClient struct {
	cc grpc.ClientConnInterface
}

func NewFaceitClient(cc grpc.ClientConnInterface) FaceitClient {
	return &faceitClient{cc}
}

func (c *faceitClient) GetProfileByID(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileReply, error) {
	out := new(ProfileReply)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/GetProfileByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) GetProfileByName(ctx context.Context, in *ProfileNameRequest, opts ...grpc.CallOption) (*ProfileReply, error) {
	out := new(ProfileReply)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/GetProfileByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) GetInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*InviteReply, error) {
	out := new(InviteReply)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/GetInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/Ban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) Unban(ctx context.Context, in *UnbanRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/Unban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) GetUserHubs(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (Faceit_GetUserHubsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Faceit_serviceDesc.Streams[0], "/faceit.Faceit/GetUserHubs", opts...)
	if err != nil {
		return nil, err
	}
	x := &faceitGetUserHubsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Faceit_GetUserHubsClient interface {
	Recv() (*Hub, error)
	grpc.ClientStream
}

type faceitGetUserHubsClient struct {
	grpc.ClientStream
}

func (x *faceitGetUserHubsClient) Recv() (*Hub, error) {
	m := new(Hub)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FaceitServer is the server API for Faceit service.
type FaceitServer interface {
	GetProfileByID(context.Context, *ProfileRequest) (*ProfileReply, error)
	GetProfileByName(context.Context, *ProfileNameRequest) (*ProfileReply, error)
	GetInvite(context.Context, *InviteRequest) (*InviteReply, error)
	Ban(context.Context, *BanRequest) (*Empty, error)
	Unban(context.Context, *UnbanRequest) (*Empty, error)
	GetUserHubs(*ProfileRequest, Faceit_GetUserHubsServer) error
}

// UnimplementedFaceitServer can be embedded to have forward compatible implementations.
type UnimplementedFaceitServer struct {
}

func (*UnimplementedFaceitServer) GetProfileByID(context.Context, *ProfileRequest) (*ProfileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfileByID not implemented")
}
func (*UnimplementedFaceitServer) GetProfileByName(context.Context, *ProfileNameRequest) (*ProfileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfileByName not implemented")
}
func (*UnimplementedFaceitServer) GetInvite(context.Context, *InviteRequest) (*InviteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInvite not implemented")
}
func (*UnimplementedFaceitServer) Ban(context.Context, *BanRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ban not implemented")
}
func (*UnimplementedFaceitServer) Unban(context.Context, *UnbanRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unban not implemented")
}
func (*UnimplementedFaceitServer) GetUserHubs(*ProfileRequest, Faceit_GetUserHubsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUserHubs not implemented")
}

func RegisterFaceitServer(s *grpc.Server, srv FaceitServer) {
	s.RegisterService(&_Faceit_serviceDesc, srv)
}

func _Faceit_GetProfileByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).GetProfileByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/GetProfileByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).GetProfileByID(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_GetProfileByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).GetProfileByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/GetProfileByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).GetProfileByName(ctx, req.(*ProfileNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_GetInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).GetInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/GetInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).GetInvite(ctx, req.(*InviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_Ban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).Ban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/Ban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).Ban(ctx, req.(*BanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_Unban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).Unban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/Unban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).Unban(ctx, req.(*UnbanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_GetUserHubs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProfileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FaceitServer).GetUserHubs(m, &faceitGetUserHubsServer{stream})
}

type Faceit_GetUserHubsServer interface {
	Send(*Hub) error
	grpc.ServerStream
}

type faceitGetUserHubsServer struct {
	grpc.ServerStream
}

func (x *faceitGetUserHubsServer) Send(m *Hub) error {
	return x.ServerStream.SendMsg(m)
}

var _Faceit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "faceit.Faceit",
	HandlerType: (*FaceitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfileByID",
			Handler:    _Faceit_GetProfileByID_Handler,
		},
		{
			MethodName: "GetProfileByName",
			Handler:    _Faceit_GetProfileByName_Handler,
		},
		{
			MethodName: "GetInvite",
			Handler:    _Faceit_GetInvite_Handler,
		},
		{
			MethodName: "Ban",
			Handler:    _Faceit_Ban_Handler,
		},
		{
			MethodName: "Unban",
			Handler:    _Faceit_Unban_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUserHubs",
			Handler:       _Faceit_GetUserHubs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "faceit.proto",
}
