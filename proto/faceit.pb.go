// Code generated by protoc-gen-go. DO NOT EDIT.
// source: faceit.proto

package faceit

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Profile
type ProfileRequest struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileRequest) Reset()         { *m = ProfileRequest{} }
func (m *ProfileRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileRequest) ProtoMessage()    {}
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{0}
}

func (m *ProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileRequest.Unmarshal(m, b)
}
func (m *ProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileRequest.Marshal(b, m, deterministic)
}
func (m *ProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileRequest.Merge(m, src)
}
func (m *ProfileRequest) XXX_Size() int {
	return xxx_messageInfo_ProfileRequest.Size(m)
}
func (m *ProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileRequest proto.InternalMessageInfo

func (m *ProfileRequest) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

type ProfileReply struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Skilllvl             int32    `protobuf:"varint,2,opt,name=skilllvl,proto3" json:"skilllvl,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileReply) Reset()         { *m = ProfileReply{} }
func (m *ProfileReply) String() string { return proto.CompactTextString(m) }
func (*ProfileReply) ProtoMessage()    {}
func (*ProfileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{1}
}

func (m *ProfileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileReply.Unmarshal(m, b)
}
func (m *ProfileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileReply.Marshal(b, m, deterministic)
}
func (m *ProfileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileReply.Merge(m, src)
}
func (m *ProfileReply) XXX_Size() int {
	return xxx_messageInfo_ProfileReply.Size(m)
}
func (m *ProfileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileReply proto.InternalMessageInfo

func (m *ProfileReply) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *ProfileReply) GetSkilllvl() int32 {
	if m != nil {
		return m.Skilllvl
	}
	return 0
}

func (m *ProfileReply) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// Invite
type InviteRequest struct {
	Hubid                string   `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviteRequest) Reset()         { *m = InviteRequest{} }
func (m *InviteRequest) String() string { return proto.CompactTextString(m) }
func (*InviteRequest) ProtoMessage()    {}
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{2}
}

func (m *InviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteRequest.Unmarshal(m, b)
}
func (m *InviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteRequest.Marshal(b, m, deterministic)
}
func (m *InviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteRequest.Merge(m, src)
}
func (m *InviteRequest) XXX_Size() int {
	return xxx_messageInfo_InviteRequest.Size(m)
}
func (m *InviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InviteRequest proto.InternalMessageInfo

func (m *InviteRequest) GetHubid() string {
	if m != nil {
		return m.Hubid
	}
	return ""
}

type InviteReply struct {
	Base                 string   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviteReply) Reset()         { *m = InviteReply{} }
func (m *InviteReply) String() string { return proto.CompactTextString(m) }
func (*InviteReply) ProtoMessage()    {}
func (*InviteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{3}
}

func (m *InviteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteReply.Unmarshal(m, b)
}
func (m *InviteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteReply.Marshal(b, m, deterministic)
}
func (m *InviteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteReply.Merge(m, src)
}
func (m *InviteReply) XXX_Size() int {
	return xxx_messageInfo_InviteReply.Size(m)
}
func (m *InviteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteReply.DiscardUnknown(m)
}

var xxx_messageInfo_InviteReply proto.InternalMessageInfo

func (m *InviteReply) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *InviteReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Ban
type BanRequest struct {
	Hubid                string   `protobuf:"bytes,1,opt,name=hubid,proto3" json:"hubid,omitempty"`
	Guid                 string   `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BanRequest) Reset()         { *m = BanRequest{} }
func (m *BanRequest) String() string { return proto.CompactTextString(m) }
func (*BanRequest) ProtoMessage()    {}
func (*BanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{4}
}

func (m *BanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BanRequest.Unmarshal(m, b)
}
func (m *BanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BanRequest.Marshal(b, m, deterministic)
}
func (m *BanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BanRequest.Merge(m, src)
}
func (m *BanRequest) XXX_Size() int {
	return xxx_messageInfo_BanRequest.Size(m)
}
func (m *BanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BanRequest proto.InternalMessageInfo

func (m *BanRequest) GetHubid() string {
	if m != nil {
		return m.Hubid
	}
	return ""
}

func (m *BanRequest) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *BanRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4a68ffa2ee3e18, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ProfileRequest)(nil), "faceit.ProfileRequest")
	proto.RegisterType((*ProfileReply)(nil), "faceit.ProfileReply")
	proto.RegisterType((*InviteRequest)(nil), "faceit.InviteRequest")
	proto.RegisterType((*InviteReply)(nil), "faceit.InviteReply")
	proto.RegisterType((*BanRequest)(nil), "faceit.BanRequest")
	proto.RegisterType((*Empty)(nil), "faceit.Empty")
}

func init() { proto.RegisterFile("faceit.proto", fileDescriptor_4e4a68ffa2ee3e18) }

var fileDescriptor_4e4a68ffa2ee3e18 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x6d, 0x5a, 0x13, 0xcd, 0xd8, 0x7a, 0x18, 0x6b, 0x09, 0x39, 0x95, 0x45, 0xa1, 0x88, 0xf4,
	0xa0, 0x78, 0x10, 0x3c, 0x15, 0xb4, 0x78, 0x11, 0x09, 0x78, 0xf1, 0xb6, 0x69, 0xa7, 0x1a, 0xdc,
	0x6e, 0x62, 0xb2, 0x29, 0xe4, 0x5b, 0xfd, 0x19, 0xc9, 0x26, 0xbb, 0x5a, 0x15, 0xf1, 0x36, 0xef,
	0xed, 0x9b, 0xc9, 0x7b, 0x8f, 0x40, 0x7f, 0xc5, 0x17, 0x94, 0xa8, 0x69, 0x96, 0xa7, 0x2a, 0x45,
	0xaf, 0x41, 0xec, 0x18, 0x0e, 0x1e, 0xf2, 0x74, 0x95, 0x08, 0x8a, 0xe8, 0xad, 0xa4, 0x42, 0x21,
	0xc2, 0xce, 0x73, 0x99, 0x2c, 0x03, 0x67, 0xec, 0x4c, 0xfc, 0x48, 0xcf, 0xec, 0x09, 0xfa, 0x56,
	0x95, 0x89, 0xea, 0x37, 0x0d, 0x86, 0xb0, 0x57, 0xbc, 0x26, 0x42, 0x88, 0x8d, 0x08, 0xba, 0x63,
	0x67, 0xe2, 0x46, 0x16, 0xd7, 0x6f, 0x65, 0x41, 0xb9, 0xe4, 0x6b, 0x0a, 0x7a, 0x7a, 0xc7, 0x62,
	0x76, 0x02, 0x83, 0x3b, 0xb9, 0x49, 0x94, 0x35, 0x30, 0x04, 0xf7, 0xa5, 0x8c, 0xed, 0xf5, 0x06,
	0xb0, 0x4b, 0xd8, 0x37, 0xb2, 0xd6, 0x41, 0xcc, 0x0b, 0x32, 0x0e, 0xea, 0xb9, 0xe6, 0x16, 0xe9,
	0x92, 0xf4, 0xd7, 0xfd, 0x48, 0xcf, 0xec, 0x1e, 0x60, 0xc6, 0xe5, 0x9f, 0xa7, 0x6d, 0x9a, 0xee,
	0x97, 0x34, 0x23, 0xf0, 0x72, 0xe2, 0x45, 0x2a, 0x5b, 0xbf, 0x2d, 0x62, 0xbb, 0xe0, 0xde, 0xac,
	0x33, 0x55, 0x9d, 0xbf, 0x3b, 0xe0, 0xdd, 0xea, 0x0e, 0xf1, 0x1a, 0x60, 0x4e, 0xaa, 0x2d, 0x08,
	0x47, 0xd3, 0xb6, 0xe8, 0xed, 0x5e, 0xc3, 0xe1, 0x0f, 0x3e, 0x13, 0x15, 0xeb, 0xe0, 0x15, 0xf8,
	0x73, 0x52, 0x4d, 0x36, 0x3c, 0x32, 0xa2, 0xad, 0x4a, 0xc2, 0xc3, 0xef, 0x74, 0xb3, 0x7a, 0x0a,
	0xbd, 0x19, 0x97, 0x88, 0xe6, 0xf5, 0x33, 0x69, 0x38, 0x30, 0x9c, 0x76, 0xcb, 0x3a, 0x78, 0x06,
	0xee, 0xa3, 0x8c, 0xff, 0xa9, 0x8e, 0x3d, 0xfd, 0x97, 0x5c, 0x7c, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0xfa, 0xfe, 0xe8, 0x35, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FaceitClient is the client API for Faceit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaceitClient interface {
	GetProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileReply, error)
	GetInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*InviteReply, error)
	Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error)
	Unban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error)
}

type faceitClient struct {
	cc grpc.ClientConnInterface
}

func NewFaceitClient(cc grpc.ClientConnInterface) FaceitClient {
	return &faceitClient{cc}
}

func (c *faceitClient) GetProfile(ctx context.Context, in *ProfileRequest, opts ...grpc.CallOption) (*ProfileReply, error) {
	out := new(ProfileReply)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) GetInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*InviteReply, error) {
	out := new(InviteReply)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/GetInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/Ban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceitClient) Unban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/faceit.Faceit/Unban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaceitServer is the server API for Faceit service.
type FaceitServer interface {
	GetProfile(context.Context, *ProfileRequest) (*ProfileReply, error)
	GetInvite(context.Context, *InviteRequest) (*InviteReply, error)
	Ban(context.Context, *BanRequest) (*Empty, error)
	Unban(context.Context, *BanRequest) (*Empty, error)
}

// UnimplementedFaceitServer can be embedded to have forward compatible implementations.
type UnimplementedFaceitServer struct {
}

func (*UnimplementedFaceitServer) GetProfile(ctx context.Context, req *ProfileRequest) (*ProfileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedFaceitServer) GetInvite(ctx context.Context, req *InviteRequest) (*InviteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInvite not implemented")
}
func (*UnimplementedFaceitServer) Ban(ctx context.Context, req *BanRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ban not implemented")
}
func (*UnimplementedFaceitServer) Unban(ctx context.Context, req *BanRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unban not implemented")
}

func RegisterFaceitServer(s *grpc.Server, srv FaceitServer) {
	s.RegisterService(&_Faceit_serviceDesc, srv)
}

func _Faceit_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).GetProfile(ctx, req.(*ProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_GetInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).GetInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/GetInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).GetInvite(ctx, req.(*InviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_Ban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).Ban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/Ban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).Ban(ctx, req.(*BanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Faceit_Unban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceitServer).Unban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faceit.Faceit/Unban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceitServer).Unban(ctx, req.(*BanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Faceit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "faceit.Faceit",
	HandlerType: (*FaceitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfile",
			Handler:    _Faceit_GetProfile_Handler,
		},
		{
			MethodName: "GetInvite",
			Handler:    _Faceit_GetInvite_Handler,
		},
		{
			MethodName: "Ban",
			Handler:    _Faceit_Ban_Handler,
		},
		{
			MethodName: "Unban",
			Handler:    _Faceit_Unban_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "faceit.proto",
}
